# docker-compose.yml

version: '3.8'

services:
  # 1. Layanan Aplikasi Next.js
  app:
    build: . # Membangun image dari Dockerfile di direktori saat ini
    container_name: ids_portal_app
    restart: unless-stopped
    env_file:
      - .env.production # Memuat variabel dari file .env.production
    depends_on:
      db:
        condition: service_healthy # Menunggu sampai database benar-benar siap
    networks:
      - app-network

  # 2. Layanan Database (PostgreSQL)
  db:
    image: postgres:15-alpine
    container_name: ids_portal_db
    restart: unless-stopped
    environment:
      # Variabel ini akan diambil dari .env.production
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data # Menyimpan data database secara persisten
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  # 3. Layanan Reverse Proxy (Nginx)
  nginx:
    image: nginx:1.25-alpine
    container_name: ids_portal_proxy
    restart: unless-stopped
    ports:
      - "80:80" # Port HTTP
      - "443:443" # Port HTTPS
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro # Mount file konfigurasi Nginx
      # - /path/to/your/certs:/etc/nginx/certs:ro # Uncomment jika Anda punya sertifikat SSL
    depends_on:
      - app
    networks:
      - app-network

# Mendefinisikan volume untuk persistensi data
volumes:
  postgres_data:

# Mendefinisikan jaringan kustom
networks:
  app-network:
    driver: bridge
